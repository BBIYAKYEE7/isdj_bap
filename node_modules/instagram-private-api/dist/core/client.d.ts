import { State } from 'instagram-private-api/dist/core/state';
import { Request } from 'instagram-private-api/dist/core/request';
import { FeedFactory } from 'instagram-private-api/dist/core/feed.factory';
import { AccountRepository } from 'instagram-private-api/dist/repositories/account.repository';
import { MediaRepository } from 'instagram-private-api/dist/repositories/media.repository';
import { ChallengeRepository } from 'instagram-private-api/dist/repositories/challenge.repository';
import { FriendshipRepository } from 'instagram-private-api/dist/repositories/friendship.repository';
import { UploadRepository } from 'instagram-private-api/dist/repositories/upload.repository';
import { PublishService } from 'instagram-private-api/dist/services/publish.service';
import { DirectThreadRepository } from 'instagram-private-api/dist/repositories/direct-thread.repository';
import { EntityFactory } from 'instagram-private-api/dist/core/entity.factory';
import { QeRepository } from 'instagram-private-api/dist/repositories/qe.repository';
import { ZrRepository } from 'instagram-private-api/dist/repositories/zr.repository';
import { LauncherRepository } from 'instagram-private-api/dist/repositories/launcher.repository';
import { DirectRepository } from 'instagram-private-api/dist/repositories/direct.repository';
import { LoomRepository } from 'instagram-private-api/dist/repositories/loom.repository';
import { QpRepository } from 'instagram-private-api/dist/repositories/qp.repository';
import { CreativesRepository } from 'instagram-private-api/dist/repositories/creatives.repository';
import { LinkedAccountRepository } from 'instagram-private-api/dist/repositories/linked-account.repository';
import { AttributionRepository } from 'instagram-private-api/dist/repositories/attribution.repository';
import { FbsearchRepository } from 'instagram-private-api/dist/repositories/fbsearch.repository';
import { SimulateService } from 'instagram-private-api/dist/services/simulate.service';
import { DiscoverRepository } from 'instagram-private-api/dist/repositories/discover.repository';
import { ConsentRepository } from 'instagram-private-api/dist/repositories/consent.repository';
import { UserRepository } from 'instagram-private-api/dist/repositories/user.repository';
import { TagRepository } from 'instagram-private-api/dist/repositories/tag.repository';
import { SearchService } from 'instagram-private-api/dist/services/search.service';
import { StoryService } from 'instagram-private-api/dist/services/story.service';
import { LiveRepository } from 'instagram-private-api/dist/repositories/live.repository';
import { LocationRepository } from 'instagram-private-api/dist/repositories/location.repository';
import { LocationSearch } from 'instagram-private-api/dist/repositories/location-search.repository';
import { MusicRepository } from 'instagram-private-api/dist/repositories/music.repository';
import { NewsRepository } from 'instagram-private-api/dist/repositories/news.repository';
import { HighlightsRepository } from 'instagram-private-api/dist/repositories/highlights.repository';
import { AdsRepository } from 'instagram-private-api/dist/repositories/ads.repository';
import { InsightsService } from 'instagram-private-api/dist/services/insights.service';
import { RestrictActionRepository } from 'instagram-private-api/dist/repositories/restrict-action.repository';
import { AddressBookRepository } from 'instagram-private-api/dist/repositories/address-book.repository';
import { StatusRepository } from 'instagram-private-api/dist/repositories/status.repository';
import { IgtvRepository } from 'instagram-private-api/dist/repositories/igtv.repository';
export declare class IgApiClient {
    state: State;
    request: Request;
    feed: FeedFactory;
    entity: EntityFactory;
    account: AccountRepository;
    attribution: AttributionRepository;
    challenge: ChallengeRepository;
    consent: ConsentRepository;
    creatives: CreativesRepository;
    direct: DirectRepository;
    directThread: DirectThreadRepository;
    discover: DiscoverRepository;
    fbsearch: FbsearchRepository;
    friendship: FriendshipRepository;
    launcher: LauncherRepository;
    linkedAccount: LinkedAccountRepository;
    loom: LoomRepository;
    media: MediaRepository;
    qe: QeRepository;
    qp: QpRepository;
    tag: TagRepository;
    upload: UploadRepository;
    user: UserRepository;
    zr: ZrRepository;
    live: LiveRepository;
    location: LocationRepository;
    locationSearch: LocationSearch;
    music: MusicRepository;
    news: NewsRepository;
    highlights: HighlightsRepository;
    ads: AdsRepository;
    restrictAction: RestrictActionRepository;
    addressBook: AddressBookRepository;
    status: StatusRepository;
    igtv: IgtvRepository;
    publish: PublishService;
    search: SearchService;
    simulate: SimulateService;
    story: StoryService;
    insights: InsightsService;
    destroy(): void;
}
